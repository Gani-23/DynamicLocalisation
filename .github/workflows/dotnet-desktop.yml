name: Release Workflow

on:
  push:
    branches:
      - main

jobs:

  build_and_release:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '6.x'

    - name: Restore Dependencies
      run: dotnet restore Localisation/Localisation.csproj

    - name: Build Application x64
      run: dotnet build --configuration Release --runtime win-x64 --output ./releases/x64 Localisation/Localisation.csproj

    - name: Build Application x86
      run: dotnet build --configuration Release --runtime win-x86 --output ./releases/x86 Localisation/Localisation.csproj

    - name: Upload Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: app_release
        path: ./releases

  create_release:
    needs: build_and_release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
    - name: Create Release
      id: create_release
      uses: actions/github-script@v6
      with:
        github-token: ${{ secrets.GITHUBTOKEN }}
        script: |
          const release = await github.repos.createRelease({
            owner: context.repo.owner,
            repo: context.repo.repo,
            tag_name: 'v1.0.0',
            name: 'Release v1.0.0',
            draft: false,
            prerelease: false,
          });
          core.setOutput('upload_url', release.data.upload_url);

  upload_release:
    needs: create_release
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Download Artifacts
      uses: actions/download-artifact@v3
      with:
        name: app_release

    - name: Upload x64 Artifact
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUBTOKEN }}
      with:
        upload_url: ${{ needs.create_release.outputs.upload_url }}
        asset_path: ./app_release/x64/app_release_x64.zip
        asset_name: app_release_x64.zip
        asset_content_type: application/zip

    - name: Upload x86 Artifact
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUBTOKEN }}
      with:
        upload_url: ${{ needs.create_release.outputs.upload_url }}
        asset_path: ./app_release/x86/app_release_x86.zip
        asset_name: app_release_x86.zip
        asset_content_type: application/zip

  cleanup:
    needs: [upload_release]
    runs-on: ubuntu-latest
    steps:
    - name: Cleanup
      run: rm -rf ./releases
