name: Release Workflow

on:
  push:
    branches:
      - main

jobs:
  build_and_release:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2
      with:
        repository: "gani-23/DynamicLocalisation"
        ref: main

    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '6.x' # .NET 6.0 version

    - name: Restore Dependencies
      run: dotnet restore Localisation/Localisation.csproj

    - name: Build Application x64
      run: dotnet build --configuration Release --runtime win-x64 --output ./releases/x64 Localisation/Localisation.csproj

    - name: Build Application x86
      run: dotnet build --configuration Release --runtime win-x86 --output ./releases/x86 Localisation/Localisation.csproj

    - name: Publish Release Artifact
      uses: actions/upload-artifact@v2
      with:
        name: app_release
        path: ./releases

  create_release:
    needs: build_and_release
    runs-on: ubuntu-latest

    steps:
    - name: Create Release
      id: create_release
      run: |
        release=$(curl -X POST -s -H "Authorization: token ${{ secrets.GITHUBTOKEN }}" -H "Accept: application/vnd.github.v3+json" https://api.github.com/repos/gani-23/DynamicLocalisation/releases -d '{"tag_name": "v1.0.0","name": "Release v1.0.0","draft": false,"prerelease": false}')
        echo "::set-output name=release_id::$(echo "$release" | jq -r '.id')"
        echo "::set-output name=upload_url::$(echo "$release" | jq -r '.upload_url')"
      shell: bash

  upload_release:
    needs: create_release
    runs-on: ubuntu-latest

    steps:
    - name: Upload x64 Artifact
      run: |
        gh release upload ${{ steps.create_release.outputs.release_id }} ./releases/x64/app_release_x64.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUBTOKEN }}

    - name: Upload x86 Artifact
      run: |
        gh release upload ${{ steps.create_release.outputs.release_id }} ./releases/x86/app_release_x86.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUBTOKEN }}

  cleanup:
    runs-on: ubuntu-latest
    needs: [upload_release]
    steps:
    - name: Cleanup
      run: rm -rf ./releases
